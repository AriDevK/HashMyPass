@page "/"
@using HashMyPass.Forms
@using HashMyPass.Componentes
@using HashMyPass.Services
@inject IDialogService DialogService

<PageTitle>Home</PageTitle>
<span id="title">Hash my Pass</span>

<MudGrid>
    <MudItem sm="7" Class="mt-5">
        <EditForm Model="_form" OnValidSubmit="OnFormSubmit">
            <DataAnnotationsValidator/>
            <MudPaper Class="pa-4">
                <MudSelect T="HashAlgorithm" @bind-Value="_form.Algorithm" Label="Algorithm" Placeholder="Please Select" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Lock" AdornmentColor="Color.Primary" Class="mb-2">
                    <MudSelectItem Value="@(HashAlgorithm.Sha1)">SHA1</MudSelectItem>
                    <MudSelectItem Value="@(HashAlgorithm.Sha256)">SHA256</MudSelectItem>
                    <MudSelectItem Value="@(HashAlgorithm.Sha384)">SHA384</MudSelectItem>
                    <MudSelectItem Value="@(HashAlgorithm.Sha512)">SHA512</MudSelectItem>
                    <MudSelectItem Value="@(HashAlgorithm.Base64)">Base64</MudSelectItem>
                </MudSelect>
                <MudTextField T="string" Label="Text" For="@(() => _form.Text!)" @bind-Value="_form.Text" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Outlined.Key" AdornmentColor="Color.Primary" Class="mb-2"/>
                <MudGrid>
                    <MudItem sm="8">
                        <MudTextField T="string" Label="Salt" For="@(() => _form.Salt!)" @bind-Value="_form.Salt" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Outlined.Refresh" AdornmentColor="Color.Primary" OnAdornmentClick="GenerateSalt" OnKeyUp="OnSaltChange"/>
                        <span class="text-muted" style="font-size: small">Click on the refresh icon to generate randomly</span>
                    </MudItem>
                    <MudItem sm="4">
                        <MudSelect @bind-Value="_form.SaltPosition" Label="Salt position" Placeholder="Please Select" Variant="Variant.Outlined" AdornmentIcon="@Icons.Material.Filled.FormatListNumbered" AdornmentColor="Color.Primary">
                            <MudSelectItem Value="@("")" hidden="true"></MudSelectItem>
                            <MudSelectItem Value="@("Prefix")">Prefix</MudSelectItem>
                            <MudSelectItem Value="@("Suffix")">Suffix</MudSelectItem>
                            <MudSelectItem Value="@("Both")">Both</MudSelectItem>
                        </MudSelect>
                    </MudItem>
                </MudGrid>
            </MudPaper>
            <MudPaper Class="pa-4 mt-4" Elevation="0">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Hash</MudButton>
                <MudButton Variant="Variant.Filled" Class="mt-3" Color="Color.Secondary" @onclick="() => _form = new HashingForm()" FullWidth="true">Reset</MudButton>
            </MudPaper>
        </EditForm>
    </MudItem>
    <MudItem sm="5">
        <img class="float-avatar" src="images/ari_key.png" alt="girl holding a key"/>
    </MudItem>
</MudGrid>


@code{
    private HashingForm _form = new HashingForm();

    private void OnFormSubmit()
    {
        var options = new DialogOptions { ClassBackground = "my-custom-class" };
        var parameters = new DialogParameters
        {
            { "Algorithm", _form.Algorithm },
            { "Text", _form.Text },
            { "Salt", _form.Salt },
            { "SaltPosition", _form.SaltPosition }
        };
        DialogService.Show<ResultDialog>("Hashing result", parameters, options);
    }

    private void GenerateSalt()
    {
        _form.Salt = Guid.NewGuid().ToString();
        var random = new Random();
        var position = random.Next(0, 3);
        _form.SaltPosition = position switch
        {
            0 => "Prefix",
            1 => "Suffix",
            _ => "Both"
        };
    }
    
    private void OnSaltChange(KeyboardEventArgs e)
    {
        if (string.IsNullOrEmpty(_form.Salt))
        {
            _form.SaltPosition = string.Empty;
        }
        
        StateHasChanged();
    }

}